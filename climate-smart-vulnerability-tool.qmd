---
title: "Climate-smart vulnerability tool"
format: 
  dashboard:
      scrolling: true
theme: minty
server: shiny
---

```{r}
#| echo: false
#| context: setup
#| warning: false
library(tidyverse)
library(ggh4x)
dat <- readRDS('data/outcomes.rds') %>% mutate(Probability_gain_neutral = round(Probability_gain_neutral*100)) %>% 
  filter(ecological_connectivity == 'Medium') %>% mutate_at(vars(site_score, exposure_score), ~case_when(. == 0.25~'Low', . == 0.5 ~ 'Medium', . == 0.75 ~ 'High')) %>% 
  mutate(var = recode(var, LandwardMang = 'Relief (high)', SeawardMang = 'Relief (Low)'),
         sediment = recode(sediment, Low = 'Low sediment', High = 'High sediment'),
         exposure_score2 = ifelse(exposure == 'ExtremeRainfall' & exposure_score == 'High', 'Low', exposure_score)) %>%
  mutate(exposure_score2 = ifelse(exposure == 'ExtremeRainfall' & exposure_score == 'Low', 'High', exposure_score2)) %>% 
  mutate_at(vars(exposure_score2, site_score, coastal_squeeze), ~factor(., levels = c('Low', 'Medium', 'High')))
```

# {.sidebar}

```{r}
#| panel: sidebar
selectInput('fact', 'Exposure factor', c('Cyclones', 'SeaLevelRise', 'ExtremeRainfall', 'Drought'),
            selected = 'Cyclones', multiple = FALSE, selectize = TRUE)
selectInput('factscore', 'Exposure score', c('Low', 'Medium', 'High'), selected = 'Low', multiple = FALSE, selectize = TRUE)
br()
selectInput('tide', 'Tidal range', c('Microtidal', 'Mesotidal', 'Macrotidal'), selected = 'Microtidal', multiple = FALSE, selectize = TRUE)
selectInput('sed', 'Sediment supply', c('High sediment', 'Low sediment'), selected = 'High sediment', multiple = FALSE, selectize = TRUE)
selectInput('coastsqueeze', 'Land-use intensity and barriers', c('Low', 'Medium', 'High'), selected = 'Low', multiple = FALSE, selectize = TRUE)
selectInput('erosion', 'Shoreline change', c('Low', 'Medium', 'High'), selected = 'Low', multiple = FALSE, selectize = TRUE)
```

# Vulnerability assessment
## Row {.flow}
```{r}
tableOutput('probTable')
```

## Row {.flow}

### Column {.tabset}
```{r}
#| title: Microtidal
plotOutput('probPlotA.micro')
```
```{r}
#| title: Mesotidal
plotOutput('probPlotA.meso')
```
```{r}
#| title: Macrotidal
plotOutput('probPlotA.macro')
```

### Column {.tabset}
```{r}
#| title: Microtidal
plotOutput('probPlotB.micro')
```
```{r}
#| title: Mesotidal
plotOutput('probPlotB.meso')
```
```{r}
#| title: Macrotidal
plotOutput('probPlotB.macro')
```

```{r}
#| context: server
datplot <- reactive({
  dat %>% filter(exposure == input$fact & sediment == input$sed & coastal_squeeze == input$coastsqueeze) 
})

dattable <- reactive({
  dat %>% filter(exposure == input$fact & tide == input$tide & sediment == input$sed & coastal_squeeze == input$coastsqueeze & exposure_score2 == input$factscore & site_score == input$erosion) %>% ungroup() %>% select(var, Probability_gain_neutral) %>% rename(Relief = var, `Probability of net gain or stability (%)` = Probability_gain_neutral)
})

output$probTable <- renderTable({
  dattable()
})

output$probPlotA.micro <- renderPlot({
ggplot(filter(datplot(), var == 'Relief (high)' & tide == 'Microtidal'), 
            aes(factor(site_score), factor(exposure_score2), fill = Probability_gain_neutral)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Neutrality (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
        ylab('Exposure factor') +
    xlab('Shoreline change') + 
    ggtitle('Relief (high)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})

output$probPlotA.meso <- renderPlot({
ggplot(filter(datplot(), var == 'Relief (high)' & tide == 'Mesotidal'), 
            aes(factor(site_score), factor(exposure_score2), fill = Probability_gain_neutral)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Neutrality (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
        ylab('Exposure factor') +
    xlab('Shoreline change') + 
        ggtitle('Relief (high)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})

output$probPlotA.macro <- renderPlot({
ggplot(filter(datplot(), var == 'Relief (high)' & tide == 'Macrotidal'), 
            aes(factor(site_score), factor(exposure_score2), fill = Probability_gain_neutral)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Neutrality (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
        ylab('Exposure factor') +
    xlab('Shoreline change') + 
        ggtitle('Relief (high)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})

output$probPlotB.micro <- renderPlot({
ggplot(filter(datplot(), var == 'Relief (Low)' & tide == 'Microtidal'), 
            aes(factor(site_score), factor(exposure_score2), fill = Probability_gain_neutral)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Neutrality (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
        ylab('Exposure factor') +
    xlab('Shoreline change') + 
        ggtitle('Relief (Low)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})

output$probPlotB.meso <- renderPlot({
ggplot(filter(datplot(), var == 'Relief (Low)' & tide == 'Mesotidal'), 
            aes(factor(site_score), factor(exposure_score2), fill = Probability_gain_neutral)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Neutrality (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
        ylab('Exposure factor') +
    xlab('Shoreline change') + 
        ggtitle('Relief (Low)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})

output$probPlotB.macro <- renderPlot({
ggplot(filter(datplot(), var == 'Relief (Low)' & tide == 'Macrotidal'), 
            aes(factor(site_score), factor(exposure_score2), fill = Probability_gain_neutral)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Neutrality (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
        ylab('Exposure factor') +
    xlab('Shoreline change') + 
        ggtitle('Relief (Low)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})
```

# Network model

![Network model conceptual diagram](images/model.png){height=50%}