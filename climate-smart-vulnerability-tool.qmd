---
title: "Climate-smart vulnerability tool"
format: 
  dashboard:
      scrolling: true
theme: minty
server: shiny
---

```{r}
#| echo: false
#| context: setup
#| warning: false
library(tidyverse)
library(ggh4x)
dat <- read.csv('data/network-model-outcomes.csv') %>% 
  mutate(relief = recode(relief, High = 'Relief (high)', Low = 'Relief (Low)'),
         sediment = recode(sediment, Low = 'Low sediment', High = 'High sediment')) %>% 
  mutate_at(vars(exposure_score, site_score, coastal_squeeze), ~factor(., levels = c('Not present', 'Low', 'Medium', 'High'))) %>% 
  mutate(Probability = ifelse(Probability_gain_neutral < 50, (100 - Probability_gain_neutral)*-1, Probability_gain_neutral))
```

# {.sidebar}

```{r}
#| panel: sidebar

selectInput('site', 'Choose a site characteristic', c('Shoreline change', 'Land-use intensity'),
            selected = 'Shoreline change', multiple = FALSE, selectize = TRUE)
#selectInput('sitescore', 'Site characteristic score', c('Not present', 'Low', 'Medium', 'High'), selected = 'Not present', multiple = FALSE, selectize = TRUE)
selectInput('fact', 'Choose an exposure factor', c('Cyclones', 'SeaLevelRise', 'ExtremeRainfall', 'Drought'),
            selected = 'Cyclones', multiple = FALSE, selectize = TRUE)
#selectInput('factscore', 'Exposure score', c('Not present', 'Low', 'Medium', 'High'), selected = 'Not present', multiple = FALSE, selectize = TRUE)
br()
#selectInput('tide', 'Tidal range', c('Microtidal', 'Mesotidal', 'Macrotidal'), selected = 'Microtidal', multiple = FALSE, selectize = TRUE)
selectInput('sed', 'Choose sediment supply', c('High sediment', 'Low sediment'), selected = 'High sediment', multiple = FALSE, selectize = TRUE)
selectInput('coastsqueeze', 'Choose coastal squeeze', c('Low', 'Medium', 'High'), selected = 'Low', multiple = FALSE, selectize = TRUE)
```

# Vulnerability assessment

## Row {.flow}

### Column {.tabset}
```{r}
#| title: Microtidal
plotOutput('probPlotA.micro')
```
```{r}
#| title: Mesotidal
plotOutput('probPlotA.meso')
```
```{r}
#| title: Macrotidal
plotOutput('probPlotA.macro')
```

### Column {.tabset}
```{r}
#| title: Microtidal
plotOutput('probPlotB.micro')
```
```{r}
#| title: Mesotidal
plotOutput('probPlotB.meso')
```
```{r}
#| title: Macrotidal
plotOutput('probPlotB.macro')
```

```{r}
#| context: server
datplot <- reactive({
  dat %>% filter(site_characteristic == input$site, exposure_factor == input$fact & sediment == input$sed & coastal_squeeze == input$coastsqueeze) 
})

#dattable <- reactive({
 # dat %>% filter(site_characteristic == input$site, exposure_factor == input$fact & tide == input$tide & sediment == input$sed & coastal_squeeze == input$coastsqueeze & exposure_score == input$factscore & site_score == input$sitescore) %>% ungroup() %>% select(relief, Probability_gain_neutral) %>% rename(Relief = relief, `Probability of net gain or stability (%)` = Probability_gain_neutral)
#})

#output$probTable <- renderTable({
 # dattable()
#})

output$probPlotA.micro <- renderPlot({
ggplot(filter(datplot(), relief == 'Relief (high)' & tide == 'Microtidal'), 
            aes(factor(site_score), factor(exposure_score), fill = Probability_gain_neutral, label = Probability)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Stability (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
    geom_text() +
        ylab(input$fact) +
    xlab(input$site) + 
    ggtitle('Relief (high)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})

output$probPlotA.meso <- renderPlot({
ggplot(filter(datplot(), relief  == 'Relief (high)' & tide == 'Mesotidal'), 
            aes(factor(site_score), factor(exposure_score), fill = Probability_gain_neutral, label = Probability)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Stability (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
    geom_text() +
        ylab(input$fact) +
    xlab(input$site) + 
        ggtitle('Relief (high)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})

output$probPlotA.macro <- renderPlot({
ggplot(filter(datplot(), relief  == 'Relief (high)' & tide == 'Macrotidal'), 
            aes(factor(site_score), factor(exposure_score), fill = Probability_gain_neutral, label = Probability)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Stability (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
    geom_text() +
        ylab(input$fact) +
    xlab(input$site) + 
        ggtitle('Relief (high)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})

output$probPlotB.micro <- renderPlot({
ggplot(filter(datplot(), relief == 'Relief (Low)' & tide == 'Microtidal'), 
            aes(factor(site_score), factor(exposure_score), fill = Probability_gain_neutral, label = Probability)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Stability (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
    geom_text() +
        ylab(input$fact) +
    xlab(input$site) + 
        ggtitle('Relief (Low)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})

output$probPlotB.meso <- renderPlot({
ggplot(filter(datplot(), relief == 'Relief (Low)' & tide == 'Mesotidal'), 
            aes(factor(site_score), factor(exposure_score), fill = Probability_gain_neutral, label = Probability)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Stability (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
    geom_text() +
        ylab(input$fact) +
    xlab(input$site) + 
        ggtitle('Relief (Low)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})

output$probPlotB.macro <- renderPlot({
ggplot(filter(datplot(), relief == 'Relief (Low)' & tide == 'Macrotidal'), 
            aes(factor(site_score), factor(exposure_score), fill = Probability_gain_neutral, label = Probability)) +
  geom_tile(color = 'black') +
  scale_fill_distiller(palette = 'Spectral', 
                       name = 'Probability of Loss (red) or Gain/Stability (blue)',
                       direction = 1,
                       breaks = c(0, 25, 50, 75, 100),
                       limits = c(0,100),
                       labels = c("-100", "-75", "50", '75', '100')) +
    geom_text() +
        ylab(input$fact) +
    xlab(input$site) + 
        ggtitle('Relief (Low)') +
  theme_classic() +
  theme(legend.position = 'bottom',
        legend.justification = 'left',
        legend.text = element_text(size=15),
        axis.text = element_text(size=15),
        strip.text.x = element_text(size = 15),
        title = element_text(size = 18),
        legend.key.size = unit(1, 'cm')) +
  guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5))
})
```

# Network model {.nostretch}

![Network model conceptual diagram](images/model.png){width="50%"}